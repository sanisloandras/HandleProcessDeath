plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.szaniszo.top.handleprocessdeath'
    compileSdk 34

    defaultConfig {
        applicationId "com.szaniszo.top.handleprocessdeath"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Replace com.example.android.dagger with your class path.
        testInstrumentationRunner "com.szaniszo.top.handleprocessdeath.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'

    implementation 'androidx.compose.material3:material3'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.compose.ui:ui-test-junit4-android:1.5.3'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation 'androidx.test:rules:1.6.0-alpha01'
    androidTestImplementation 'androidx.test:runner:1.5.0'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    def lifecycle_version = "2.6.2"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    def dagger_hilt_version = "2.44.2"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.hilt:hilt-navigation-fragment:1.0.0"

    def nav_version = "2.7.2"

    // For Robolectric tests.
    // testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Kotlin.
    // kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
    // ...with Java.
    // testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    // ...with Java.
    // androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    def composeBom = platform('androidx.compose:compose-bom:2023.08.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    //implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    //implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    //implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    //implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    //implementation 'androidx.activity:activity-compose:1.7.2'
    // Optional - Integration with ViewModels
    //implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    //implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    //implementation 'androidx.compose.runtime:runtime-rxjava2'
}